buildscript {
	repositories {
		mavenCentral()
	}
}

allprojects {
	version = gradle.ext.appVersion
	group = 'co.freeside'

	ext {
		groovyVersion = '2.4.13'
		httpClientVersion = '4.5.4'
		junitVersion = '4.12'
		spockVersion = '1.1-groovy-2.4'
		jettyVersion = '9.4.8.v20171121'

		groovyDependency = "org.codehaus.groovy:groovy-all:$groovyVersion"
		httpClientDependency = "org.apache.httpcomponents:httpclient:$httpClientVersion"
		junitDependency = "junit:junit:$junitVersion"
		spockDependency = "org.spockframework:spock-core:$spockVersion"
		jettyDependency = "org.eclipse.jetty:jetty-server:$jettyVersion"

		// 2018
		jettyProxyDependency = "org.eclipse.jetty:jetty-proxy:$jettyVersion"

		publishedModules = [':betamax-core', ':betamax-proxy', ':betamax-httpclient', ':betamax-jetty']
	}
}

subprojects {
	apply plugin: 'groovy'
	apply plugin: 'codenarc'
	apply plugin: 'project-report'
	apply plugin: 'maven'

	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}

	configurations {
		deployerJars
	}

	dependencies {
		compile groovyDependency

		testCompile(spockDependency) {
			exclude module: 'groovy-all'
			exclude module: 'junit-dep'
		}
	}

	codenarc {
		toolVersion = '0.17'
		ignoreFailures = true
	}

	test {
		testLogging {
			quiet {
				events 'failed'
				exceptionFormat 'short'
			}
		}
	}

	uploadArchives {
		repositories {
			mavenDeployer {
				configuration = configurations.deployerJars
				repository(url: gradle.artifactory.releaseRepository) {
					authentication(userName: gradle.artifactory.user, password: gradle.artifactory.password)
				}
				snapshotRepository(url: gradle.artifactory.snapshotRepository) {
					authentication(userName: gradle.artifactory.user, password: gradle.artifactory.password)
				}
			}
		}
	}

	jar {
		baseName = project.name
	}

	task sourcesJar(type: Jar, dependsOn: classes) {
		baseName = project.name
		classifier = 'sources'
		from sourceSets.main.allSource
	}

	task testJar(type: Jar, dependsOn: testClasses) {
		baseName = project.name
		classifier = 'tests'
		from sourceSets.test.output
	}

	artifacts {
		archives sourcesJar
		archives testJar
	}
}

//archivesBaseName = 'betamax'
